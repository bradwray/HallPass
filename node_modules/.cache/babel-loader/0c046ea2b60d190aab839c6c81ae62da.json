{"ast":null,"code":"import _classCallCheck from \"/workspace/HallPass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/HallPass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/HallPass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/HallPass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/HallPass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/HallPass/src/Pass.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nvar readableExpiration = function readableExpiration(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var day = date.toUTCString().substring(0, 16);\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n  return strTime + \" on \" + day;\n};\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      backgroundColor: \"#eee\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    textField: {\n      width: \"90%\",\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      backgroundColor: \"#fff\"\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    },\n    root: {\n      flexGrow: 1\n    },\n    timeBar: {\n      color: \"#00695C\",\n      bottom: \"20px\"\n    },\n    colorPrimary: {\n      backgroundColor: \"#B2DFDB\"\n    },\n    barColorPrimary: {\n      backgroundColor: \"#00695C\"\n    },\n    expired: {\n      backgroundColor: \"#f00\",\n      width: \"100%\",\n      height: \"600px\"\n    }\n  };\n};\n\nvar Pass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pass, _React$Component);\n\n  function Pass() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pass);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pass)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expired: false,\n      name: localStorage.getItem(\"name\")\n    };\n\n    _this.componentWillMount = function () {\n      var endTime;\n      var passMins = 8; //if a QR was just scanned (i.e. ...sandbox.io/Wray and there is no time param yet\n      //and the pass has been expired as long as it was in the first place\n\n      if (_this.props.match.params.expires === undefined && localStorage.getItem(\"expiresAt\") < new Date().getTime() - 1000 * 60 * passMins) {\n        //create an expiration time\n        endTime = new Date().getTime() + 1000 * 60 * passMins; //put it in local storage\n\n        localStorage.setItem(\"expiresAt\", endTime); //push it to the path\n\n        _this.props.history.push(\"/\" + _this.props.match.params.teacher + \"/\" + endTime);\n\n        _this.setState({\n          expired: false\n        });\n      }\n\n      var x = setInterval(function () {\n        endTime = localStorage.getItem(\"expiresAt\");\n        var firstDistance = 1000 * 60 * passMins; // Get todays date and time\n\n        var now = new Date().getTime(); // Find the distance between now and the count down date\n\n        var distance = endTime - now;\n        console.log(endTime); //console.log(firstDistance);\n        // Time calculations for days, hours, minutes and seconds\n\n        var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        var seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        _this.setState({\n          percent: (1 - distance / firstDistance) * 100,\n          timeLeft: minutes + \" min \" + seconds + \" sec\",\n          expired: distance < 0,\n          expiredAt: endTime\n        });\n\n        if (minutes < 0 - passMins) {\n          window.close();\n        }\n      }, 1000);\n\n      _this.setState({\n        fromTeacher: _this.props.match.params.teacher\n      });\n    };\n\n    _this.handleChange = function (event) {\n      localStorage.setItem(\"name\", event.target.value);\n\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleSelect = function (event) {\n      _this.setState({\n        destination: event.target.value\n      });\n    };\n\n    _this.handleMakePass = function () {\n      _this.setState({\n        passMade: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Pass, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, !this.state.expired ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.fromTeacher ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Hall pass from: \", this.state.fromTeacher, \"'s room for...\"), !this.state.passMade ? React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-dense\",\n        label: \"Full Name?\",\n        className: classNames(classes.textField, classes.dense),\n        margin: \"dense\",\n        variant: \"outlined\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this2.InputLabelRef = _ref;\n        },\n        htmlFor: \"outlined-age-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Destination?\"), React.createElement(Select, {\n        value: this.state.destination,\n        onChange: this.handleSelect,\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"Destination\",\n          id: \"outlined-age-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"Bathroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Bathroom\"), React.createElement(MenuItem, {\n        value: \"Office\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Office\"), React.createElement(MenuItem, {\n        value: \"Guidance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Guidance\"), React.createElement(MenuItem, {\n        value: \"Media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Media\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.handleMakePass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Make Pass\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.state.name), \"going to\", React.createElement(Typography, {\n        variant: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.state.destination), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.timeBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.timeLeft), React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"till this pass expires.\"), this.state.percent < 75 ? React.createElement(LinearProgress, {\n        classes: {\n          colorPrimary: classes.colorPrimary,\n          barColorPrimary: classes.barColorPrimary\n        },\n        variant: \"determinate\",\n        value: this.state.percent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }) : React.createElement(LinearProgress, {\n        color: \"secondary\",\n        variant: \"determinate\",\n        value: 87,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: classes.expired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"PASS EXPIRED AT:\", \" \", readableExpiration(new Date(parseInt(localStorage.getItem(\"expiresAt\"), 10))))));\n    }\n  }]);\n\n  return Pass;\n}(React.Component);\n\nPass.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Pass);","map":{"version":3,"sources":["/workspace/HallPass/src/Pass.js"],"names":["React","PropTypes","classNames","withStyles","TextField","LinearProgress","OutlinedInput","InputLabel","FormControl","Button","Typography","MenuItem","Select","readableExpiration","date","hours","getHours","minutes","getMinutes","day","toUTCString","substring","ampm","strTime","styles","theme","container","backgroundColor","width","height","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","root","flexGrow","timeBar","color","bottom","colorPrimary","barColorPrimary","expired","Pass","state","name","localStorage","getItem","componentWillMount","endTime","passMins","props","match","params","expires","undefined","Date","getTime","setItem","history","push","teacher","setState","x","setInterval","firstDistance","now","distance","console","log","Math","floor","seconds","percent","timeLeft","expiredAt","window","close","fromTeacher","handleChange","event","target","value","handleSelect","destination","handleMakePass","passMade","classes","ref","InputLabelRef","labelWidth","button","parseInt","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport Select from \"@material-ui/core/Select\";\n\nconst readableExpiration = date => {\n   var hours = date.getHours();\n   var minutes = date.getMinutes();\n   var day = date.toUTCString().substring(0, 16);\n   var ampm = hours >= 12 ? \"pm\" : \"am\";\n   hours = hours % 12;\n   hours = hours ? hours : 12; // the hour '0' should be '12'\n   minutes = minutes < 10 ? \"0\" + minutes : minutes;\n   var strTime = hours + \":\" + minutes + \" \" + ampm;\n   return strTime + \" on \" + day;\n};\n\nlet styles = theme => ({\n   container: {\n      backgroundColor: \"#eee\",\n      width: \"100%\",\n      height: \"100%\"\n   },\n   textField: {\n      width: \"90%\",\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      backgroundColor: \"#fff\"\n   },\n   dense: {\n      marginTop: 16\n   },\n   menu: {\n      width: 200\n   },\n   root: {\n      flexGrow: 1\n   },\n   timeBar: {\n      color: \"#00695C\",\n      bottom: \"20px\"\n   },\n   colorPrimary: {\n      backgroundColor: \"#B2DFDB\"\n   },\n   barColorPrimary: {\n      backgroundColor: \"#00695C\"\n   },\n   expired: {\n      backgroundColor: \"#f00\",\n      width: \"100%\",\n      height: \"600px\"\n   }\n});\n\nclass Pass extends React.Component {\n   state = {\n      expired: false,\n      name: localStorage.getItem(\"name\")\n   };\n\n   componentWillMount = () => {\n      var endTime;\n      var passMins = 8;\n      //if a QR was just scanned (i.e. ...sandbox.io/Wray and there is no time param yet\n      //and the pass has been expired as long as it was in the first place\n      if (\n         this.props.match.params.expires === undefined &&\n         localStorage.getItem(\"expiresAt\") <\n         new Date().getTime() - 1000 * 60 * passMins\n      ) {\n         //create an expiration time\n         endTime = new Date().getTime() + 1000 * 60 * passMins;\n         //put it in local storage\n         localStorage.setItem(\"expiresAt\", endTime);\n         //push it to the path\n         this.props.history.push(\n            \"/\" + this.props.match.params.teacher + \"/\" + endTime\n         );\n         this.setState({ expired: false });\n      }\n\n      var x = setInterval(() => {\n         endTime = localStorage.getItem(\"expiresAt\");\n         var firstDistance = 1000 * 60 * passMins;\n         // Get todays date and time\n         var now = new Date().getTime();\n         // Find the distance between now and the count down date\n         var distance = endTime - now;\n         console.log(endTime);\n         //console.log(firstDistance);\n         // Time calculations for days, hours, minutes and seconds\n         var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n         var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n         this.setState({\n            percent: (1 - distance / firstDistance) * 100,\n            timeLeft: minutes + \" min \" + seconds + \" sec\",\n            expired: distance < 0,\n            expiredAt: endTime\n         });\n\n         if (minutes < 0 - passMins) {\n            window.close();\n         }\n      }, 1000);\n\n      this.setState({\n         fromTeacher: this.props.match.params.teacher\n      });\n   };\n\n   handleChange = event => {\n      localStorage.setItem(\"name\", event.target.value);\n      this.setState({\n         name: event.target.value\n      });\n   };\n\n   handleSelect = event => {\n      this.setState({ destination: event.target.value });\n   };\n\n   handleMakePass = () => {\n      this.setState({ passMade: true });\n   };\n\n   render() {\n      const { classes } = this.props;\n      console.log(this.state);\n      return (\n         <div>\n            {!this.state.expired ? (\n               <div>\n                  {this.state.fromTeacher ? (\n                     <div>\n                        <div className={classes.root}>\n                           <Typography variant=\"h5\">\n                              Hall pass from: {this.state.fromTeacher}'s room for...\n                  </Typography>\n                           {!this.state.passMade ? (\n                              <form\n                                 className={classes.container}\n                                 noValidate\n                                 autoComplete=\"off\"\n                              >\n                                 <TextField\n                                    id=\"outlined-dense\"\n                                    label=\"Full Name?\"\n                                    className={classNames(classes.textField, classes.dense)}\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                 />\n                                 <br />\n                                 <br />\n                                 <FormControl\n                                    variant=\"outlined\"\n                                    className={classes.textField}\n                                 >\n                                    <InputLabel\n                                       ref={ref => {\n                                          this.InputLabelRef = ref;\n                                       }}\n                                       htmlFor=\"outlined-age-simple\"\n                                    >\n                                       Destination?\n                        </InputLabel>\n                                    <Select\n                                       value={this.state.destination}\n                                       onChange={this.handleSelect}\n                                       input={\n                                          <OutlinedInput\n                                             labelWidth={this.state.labelWidth}\n                                             name=\"Destination\"\n                                             id=\"outlined-age-simple\"\n                                          />\n                                       }\n                                    >\n                                       <MenuItem value={\"Bathroom\"}>Bathroom</MenuItem>\n                                       <MenuItem value={\"Office\"}>Office</MenuItem>\n                                       <MenuItem value={\"Guidance\"}>Guidance</MenuItem>\n                                       <MenuItem value={\"Media\"}>Media</MenuItem>\n                                    </Select>\n                                 </FormControl>\n                                 <br />\n                                 <br />\n                                 <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    onClick={this.handleMakePass}\n                                 >\n                                    Make Pass\n                      </Button>\n                                 <br />\n                                 <br />\n                              </form>\n                           ) : (\n                                 <div>\n                                    <Typography variant=\"h3\">{this.state.name}</Typography>\n                                    going to\n                      <Typography variant=\"h3\">\n                                       {this.state.destination}\n                                    </Typography>\n                                    <br />\n                                 </div>\n                              )}\n                           <div className={classes.timeBar}>\n                              <Typography variant=\"h3\">{this.state.timeLeft}</Typography>\n                              <Typography variant=\"h5\">\n                                 till this pass expires.\n                    </Typography>\n                              {this.state.percent < 75 ? (\n                                 <LinearProgress\n                                    classes={{\n                                       colorPrimary: classes.colorPrimary,\n                                       barColorPrimary: classes.barColorPrimary\n                                    }}\n                                    variant=\"determinate\"\n                                    value={this.state.percent}\n                                 />\n                              ) : (\n                                    <LinearProgress\n                                       color=\"secondary\"\n                                       variant=\"determinate\"\n                                       value={87}\n                                    />\n                                 )}\n                           </div>\n                        </div>\n                     </div>\n                  ) : (\n                        <div />\n                     )}\n               </div>\n            ) : (\n                  <div className={classes.expired}>\n                     <Typography variant=\"h2\">\n                        PASS EXPIRED AT:{\" \"}\n                        {readableExpiration(\n                           new Date(parseInt(localStorage.getItem(\"expiresAt\"), 10))\n                        )}\n                     </Typography>\n                  </div>\n               )}\n         </div>\n      );\n   }\n}\n\nPass.propTypes = {\n   classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Pass);\n"]},"metadata":{},"sourceType":"module"}